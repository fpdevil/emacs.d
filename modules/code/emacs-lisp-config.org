#+TITLE: Emacs lisp configuration
#+STARTUP: indent

* Programming using the Emacs Lisp
  There is no need for using the ~use-package~ statement as ~lisp mode~ is an internal package.

  #+begin_src emacs-lisp
  (bind-key "RET" 'comment-indent-new-line emacs-lisp-mode-map)
  (add-hook 'emacs-lisp-mode-hook 'flyspell-prog-mode)

  (use-package ielm
    :commands ielm)
  #+end_src

** AutoFillMode
Do not use the [[https://www.emacswiki.org/emacs/AutoFillMode][Auto fill mode]] while editing the ~emacs-lisp~ code.

#+begin_src emacs-lisp :lexical no
(add-hook 'emacs-lisp-mode-hook 'turn-off-auto-fill)
#+end_src

** Elisp format

Testing the ~emacs-lisp~ code formatting.

#+begin_src emacs-lisp :lexical no
(use-package elisp-format
  :ensure t
  :defer 110)
#+end_src

** Pretty outlines for elisp

Configure pretty outlines in the ~emacs-lisp~ code.

#+begin_src emacs-lisp :lexical no
;; pretty outlines for emacs-lisp code
"^;; \\(\\*+.*\\)$"
(defconst lel-font-lock-keywords
  '(("^;; ?\\(\\* .*\\)$" 1 'org-level-1 prepend)
    ("^;; ?\\(\\*\\* .*\\)$" 1 'org-level-2 prepend)
    ("^;; ?\\(\\*\\*\\* .*\\)$" 1 'org-level-3 prepend)
    ("^;; ?\\(\\*\\*\\*\\* .*\\)$" 1 'org-level-4 prepend)
    ("^;; ?\\(\\*\\*\\*\\*\\* .*\\)$" 1 'org-level-5 prepend)
    ;; (lel-outline-comment-highlight 1 'default prepend)
    ("`\\([^\n']+\\)'" 1 font-lock-constant-face prepend)))

(font-lock-add-keywords 'emacs-lisp-mode lel-font-lock-keywords)
#+end_src

* Highlight function/macro calls in Emacs
This  package highlights  function symbols  in function  calls. This  makes them
stand out from  other symbols, which makes  it easy to see where  calls to other
functions are. It also  helps to reduce typos, as when  youâ€™re typing a function
name, it becomes underlined when typed correctly. Optionally, macros and special
forms can be highlighted  as well. Also, a list of symbols  can be excluded from
highlighting; by  default, ones  like +  / -, <  / >,  error, require,  etc. are
excluded. Finally, the not function can be highlighted specially.

#+begin_src emacs-lisp :lexical no
;; highlight function calls
(use-package highlight-function-calls
  :quelpa
  (:fetcher github :repo "alphapapa/highlight-function-calls")
  :config
  (add-hook 'emacs-lisp-mode-hook 'highlight-function-calls-mode))
#+end_src

* Extra colors for Emacs info-mode
~info-colors~ is a modern adaption of the extra coloring provided by Drew Adams info+ package.
#+begin_src emacs-lisp
;; extra colors for emacs info-mode
(use-package info-colors
  :quelpa
  (:fetcher github :repo "ubolonton/info-colors")
  :hook
  (Info-selection-hook . info-colors-fontify-node))
#+end_src
