#+begin_src plantuml :exports results :results verbatim
@startuml
help themes
@enduml
#+end_src

#+RESULTS:
#+BEGIN_EXAMPLE

Help on themes


 The possible themes are :

            _none_

            amiga
            aws-orange

            black-knight
            bluegray

            blueprint

            carbon-gray
            cerulean

            cerulean-outline
            cloudscape-design

            crt-amber

            crt-green
            cyborg

            cyborg-outline
            hacker

            lightgray

            mars
            materia

            materia-outline
            metal

            mimeograph

            minty
            mono

            plain
            reddress-darkblue

            reddress-darkgreen

            reddress-darkorange
            reddress-darkred

            reddress-lightblue
            reddress-lightgreen

            reddress-lightorange

            reddress-lightred
            sandstone

            silver
            sketchy

            sketchy-outline

            spacelab
            spacelab-white

            sunlust
            superhero

            superhero-outline

            toy
            united

            vibrant
#+END_EXAMPLE

#+begin_src plantuml :results file :file /tmp/mind-map1.png :exports results
@startmindmap
+ OS
++ Ubuntu
+++ Linux Mint
+++ Kubuntu
+++ Lubuntu
+++ KDE Neon
++ LMDE
++ SolydXK
++ SteamOS
++ Raspbian
-- Windows 95
-- Windows 98
-- Windows NT
--- Windows 8
--- Windows 10
@endmindmap
#+end_src

#+RESULTS:
[[file:/tmp/mind-map1.png]]

#+begin_src plantuml :results file :file /tmp/mind-map2.png :exports results
@startmindmap
!theme minty

+ **myThoughts**
++ Thought 1
'tag::details[]
+++_ Thought 1.1
+++_ Thought 1.2
'end::details[]
++ Thought 2
++ Thought 3

'tag::left[]
-- Thought A
-- Thought B
-- Thought C
'end::left[]

@endmindmap
#+end_src

#+RESULTS:
[[file:/tmp/mind-map2.png]]

#+begin_src plantuml :results file :file /tmp/mind-map3.png :exports results
@startmindmap
' Set theme
!theme cerulean

,* Debian
,** Ubuntu
,*** Linux Mint
,*** Kubuntu
,*** Lubuntu
,*** KDE Neon
,** LMDE
,** SolydXK
,** SteamOS
,** Raspbian with a very long name
,*** <s>Raspmbc</s> => OSMC
,*** <s>Raspyfi</s> => Volumio
@endmindmap
#+end_src

#+RESULTS:
[[file:/tmp/mind-map3.png]]

#+begin_src plantuml :results file :file /tmp/mind-map4.png :exports results
@startmindmap
!theme cyborg-outline

,* root
,** box
,**_ text

@endmindmap
#+end_src

#+RESULTS:
[[file:/tmp/mind-map4.png]]


#+begin_src plantuml :results file :file /tmp/sequence1.png :exports results
@startuml
!theme vibrant

actor Foo1
boundary Foo2
control Foo3
entity Foo4
database Foo5
collections Foo6
Foo1 -> Foo2 : To boundary
Foo1 -> Foo3 : To control
Foo1 -> Foo4 : To entity
Foo1 -> Foo5 : To database
Foo1 -> Foo6 : To collections
@enduml
#+end_src

#+RESULTS:
[[file:/tmp/sequence1.png]]

#+begin_src plantuml :results file :file /tmp/sequence2.png :exports results
@startuml

!theme cerulean

note over Backend: 2. Update Family Tree
loop for each New Member
    alt If Update Pattern = Any member
        Backend -> Backend: 2.1. Check DNA
        alt If DNA test returns success
            Backend <-> RDB: 2.1.1.1. Update\n[t_parent]
            Backend <-> RDB: 2.1.1.2. Update\n[t_child]
            Backend <-> RDB: 2.1.1.3. Update\n[t_grand_child]
        end
        alt If DNA test returns failure
            Backend -> Backend: 2.1.2. Add Member into Error List
        end
    end
end

@enduml
#+end_src

#+RESULTS:
[[file:/tmp/sequence2.png]]
